--DROP TABLE SONGS;
--DROP TABLE ALBUMS;
--DROP TABLE BANDMEMBERS;
--DROP TABLE BANDS;
--DROP TABLE ARTISTS;
--DROP TABLE GENRES;

-- DROP TABLE ARTISTS;
CREATE TABLE ARTISTS(
	ARTISTID SERIAL,
	STAGENAME VARCHAR(100) NOT NULL,
	AGE INTEGER NOT NULL
);

ALTER TABLE ARTISTS ADD CONSTRAINT PK_ARTISTS PRIMARY KEY (ARTISTID);

-- DROP TABLE BANDS;
CREATE TABLE BANDS(
    BANDID SERIAL,
    BANDNAME VARCHAR(100) NOT NULL
);

ALTER TABLE BANDS ADD CONSTRAINT PK_BANDS PRIMARY KEY (BANDID);

-- DROP TABLE BANDMEMBERS;
CREATE TABLE BANDMEMBERS(
    BANDID INTEGER,
    ARTISTID INTEGER
);

ALTER TABLE BANDMEMBERS ADD CONSTRAINT PK_BANDMEMBERS PRIMARY KEY (BANDID, ARTISTID);
ALTER TABLE BANDMEMBERS ADD CONSTRAINT FK_ARTIST FOREIGN KEY (ARTISTID) REFERENCES ARTISTS(ARTISTID);
ALTER TABLE BANDMEMBERS ADD CONSTRAINT FK_BAND FOREIGN KEY (BANDID) REFERENCES BANDS(BANDID);

-- DROP TABLE GENRES;
CREATE TABLE GENRES(
	GENREID SERIAL,
	GENRENAME VARCHAR(100) NOT NULL
);

ALTER TABLE GENRES ADD CONSTRAINT PK_GENRES PRIMARY KEY(GENREID);

-- DROP TABLE ALBUMS;
CREATE TABLE ALBUMS(
	ALBUMID SERIAL,
	ALBUMNAME VARCHAR(250) NOT NULL,
	AUTHOR INTEGER NOT NULL,
	GENRE INTEGER NOT NULL,
	RELEASEYEAR INTEGER NOT NULL,
	DURATION INTEGER NOT NULL -- IN MINUTES
);

ALTER TABLE ALBUMS ADD CONSTRAINT PK_ALBUMS PRIMARY KEY (ALBUMID);
ALTER TABLE ALBUMS ADD CONSTRAINT FK_AUTHOR FOREIGN KEY (AUTHOR) REFERENCES BANDS(BANDID);
ALTER TABLE ALBUMS ADD CONSTRAINT FK_GENRE FOREIGN KEY (GENRE) REFERENCES GENRES(GENREID);

-- DROP TABLE SONGS;
CREATE TABLE SONGS(
	SONGID SERIAL,
	SONGNAME VARCHAR(250) NOT NULL,
	LENGTH INTEGER NOT NULL, -- IN MINUTES
	ALBUM INTEGER NOT NULL
);

ALTER TABLE SONGS ADD CONSTRAINT PK_SONGS PRIMARY KEY (SONGID);
ALTER TABLE SONGS ADD CONSTRAINT FK_ALBUM FOREIGN KEY (ALBUM) REFERENCES ALBUMS(ALBUMID);
